===
Comment: Experiment - Club Mech.
Question: Is Hum notation suitable for a typical web application?
Question: Does Hum reduces the lines-of-code for Club Mech views / dialogs?
. Use Cases:
. . Voter identifies self.
. . Voter enters a proposal.
. . Voter votes for proposal and can vote for more than one.
. . Voter votes for proposal in reduced list, but can only vote for one.
. . The home screen shows club title, purpose, meetings, and members.
===
Context: Start.

U: Enter.
S: Club Mech is a test bed for Hum dialogs.

U: My name is [user name].
U: Authenticated as [user name].
S: Hello [user name].
   Please select an activity.
. Push context "Select an activity.".

U: I am a member.
S: What is your name?

U: *.
S: Welcome to Club Mech.
   Are you a member? 
===
Context: Select an activity.

U: Enter a topic.
U: Propose a topic.
S: Please enter a description of the talk you are offering.
. Ask topic.

U: Vote *.
S: Here is the current ballot.
. Ask voter-ballot.
. (Assumes a ballot is available / usable.)

U: * scoreboard.
S: Here is the scoreboard for the current ballot.
. Show scoreboard.
. (Also assumes a ballot is available / usable.)
. (A ballot is available if there are one or more proposals where ready-for-ballot = 'include on ballots'.)
===
View: Topic.

 Speaker: [speaker]
 Topic: [title]
 Description:
    [description 5]
===
Dictionary: Topic vocabulary.
. Topic attributes include speaker, title, description.
===
Dictionary: Proposals and Ballots.
. Document attributes include authors, title, abstract-text, full-text, authored-when.
. Document-version is a document.
. Document-version attributes include version-authors, versioned-when.
. An author is a person. (Perhaps an author should be a user so that we have their e-mail address and credentials.)
. A proposal is a document.
. Proposal attributes include sponsored-by-member, sponsored-when, shares-required, ready-for-ballot, assigned-to-party.
. (Shares-required is the minimum number of shares required for the proposal to be viable. Default is zero.)
. Ready-for-ballot categories include 'yes: Include on ballots', 'incomplete: authors are working on it', 'passed: implementation assigned', 'withdrawn: withdrawn for now'.
. A member is a person.
. Ballot attributes include finalized-when, proposals, shares-allowed.
. Shares-allowed is a measure.
. (The ballot proposals include the proposals available at the time the ballot is finalized.)
. Voter-ballot attributes include voter, proposal-scores, submitted-when, finalized-when.
. (The voter-ballot shows an individual voter`s share-allocation at a point in time.)
. Proposal-score attributes include title, score, when-scored.
. Score is a measure. 
. Scoreboard attributes include scored-when, proposal-scores.
===
Dictionary: People we know. (Should be in base vocabulary.)
. Party attributes include name, mailing-address, business-phone.
. A person is a party.
. Person attributes include prefix, first-name, middle-initials, last-name, suffix.
. A user is a person.
. User attributes include e-mail-address, portrait.
. (We currently use openID for authentication.)
===
View: Current-Ballot Proposals.

  Ballot as of: [ballot finalized-when]
  
. For each proposal in ballot-proposals = proposals where proposal is ready-for-ballot:
  [title]
  authored by: [author] sponsored by: [sponsored-by-member] 
           on: [authored-when]   on: [sponsored-when]
  [shares-required] shares are required for passage.
  abstract: [abstract-text 3]
  description: [full-text 3]

. (Note: We do not define eligible voters here.)
===
View: Voter-Ballot.
 Voter: [voter name] id: [vote id]
 You are allowed [vote-share quantity] [vote-share units].
 You may change your votes until the voting is closed. 

. Table of proposal-scores where current-ballot proposals include proposal:
| shares | title |
. (The score shown on this ballot view only includes the voter`s contribution to the total.)
. (The total score is shown on the scoreboard view.)

 Do you wish to finalize your ballot? [finalize?] [finalized-when]
. (You cannot change your ballot after you finalize it and submit it.)
. (If all ballots are finalized, the scoreboard for the ballot shows "finalized".)

 [[Submit]]
. (The scoreboard is not updated until the ballot is submitted.)
===
View: Current-Ballot Scoreboard.
. (The context for a scoreboard is the current ballot.)

 Each voter is allowed [votes-allowed] shares.
 Scores as-of: [scored-when].
 Voting will be closed by: [voting-closed-when].
 All ballots were finalized at: [finalized-when].
. (This time-stamp is either the time when all the submitted voter-ballots are finalized,  or, it is the voting-closed-when.)

. Table of proposal-scores where proposal is in current-ballot ballot-proposals.
| score | title |
. (The score could be total shares voted, percentage of shares voted, some other scheme.)
=== 
View: Proposal score history.

 This view shows the history of the shares allocated to this proposal on various ballots.
. (The idea is that a proposal may appear on ballots until it is passed or withdrawn.)

 Proposal: [proposal title]
 History as of: [ran-when].
 Minimum required: [proposal shares-required]

.Table of proposal-scores where proposal-score title matches proposal title:
| score | scored-when | percent-of-requirement = 100 * score / shares-required |

. (Note: The proposal title is treated as a natural key.)
. (If the title of a proposal is changed, it is treated as a different proposal.)
___
Dialog: Greetings.
. (We only require a cookie for authentication.)
. (Option: Use openID before depositing the cookie.)

U: No cookie. (Scribe says: 'No cookie.')
U: Sign on as a different user.
S: Welcome.
. Show welcome.

U: I am [user]. (Scribe has authenticated user.)
S: Hello [user first-name]. What do you want to do?
. Ask activity.

===
View: Welcome.
. (Home screen)

! Welcome to [club title].

 [club title] meets on: [meeting-pattern] of each month
 at: [meeting-location] [link: directions | meeting-location map-url ]

!! Purpose 
 [club purpose-text 7]

 [pane: meetings] [pane: members]
===
Pane: meetings.
. (This view pane includes past meetings and future meetings.)
!!! Meetings
. For each meeting in descending order of meeting-when:
 [yyyy-mm-dd: meeting-when] [topic title] [topic presenter]
 [topic description 3]

. (The meeting-when attribute is a time-stamp. But we only want to show the date part here.)
===
Pane: members.
!!! Members
. Table of members:
| portrait | name | [pop-up: bio] |
___
Dictionary: Club, members, and meetings.
. Club attributes include title, purpose, meeting-pattern, meeting-location, meetings, members.
. Location attributes include address, GPS, map-url.
. Meeting attributes include topic, meeting-when.
. A topic is a proposal.
. Topic attributes include speaker.
. A speaker is a person.
. Speaker attributes include bio.
. A member is a user. 
. (See: 'People we know')
===
Comment: Analysis of lines-of-code.

Hum reduces the number of lines-of-code because:
- Class attributes are generally identified in a single line.
- Persistence is automatic.
- Filters are relatively simple.
- Mark-up is much less verbose than HTML.
- User-interface details are hidden in the scribe.
	- Scribe performs openID authentication.
	- 
===
===
