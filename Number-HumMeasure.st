'From Pharo1.3 of 16 June 2011 [Latest update: #13302] on 23 July 2013 at 12:03:18 pm'!!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/25/2013 09:04'!acre	| measure |	measure := HumMeasure quantity: (self * 4046.873) units: #squareMeter.	^measure.! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/25/2013 09:00'!amu	" atomic mass unit "	| m |	m := self atomicMassUnit.	^m! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/25/2013 09:01'!astronomicalUnit	"average distance between Earth and Sun"	| measure |	measure := HumMeasure quantity: (self * 149597870700 ) units: #meter.	"TODO: Correct above factor ((1 au) as: #miles) should be about 93e6 miles"	^measure! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/25/2013 09:00'!atomicMassUnit	" atomic mass unit "	| m |	m := HumMeasure new.	m quantity: (self * 1.66053873e-27) units: #kilogram.	^m! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/24/2013 10:59'!au	"astronomical units"	| measure |	measure := self astronomicalUnit.	^measure! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/24/2013 11:00'!bar	"pressure -- one bar is approximately one atmosphere"	| measure |	measure := HumMeasure quantity: ( self * 1e5 ) units: #pascal.	^measure.! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/25/2013 08:55'!britishThermalUnit	"Energy - British Thermal Unit (ISO)"	| measure |	measure := HumMeasure quantity: ( self * 1.0545) units: #joule.	^measure.! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/25/2013 08:55'!btu	"Energy - British Thermal Unit (ISO)"	| measure |	measure := self britishThermalUnit.	^measure.! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/23/2013 19:55'!cubicFoot	| measure |	measure := HumMeasure quantity: ( self * 0.028316846592 ) units: #cubicMeter.	^measure.! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/23/2013 19:57'!cubicInch	| measure |	measure := HumMeasure quantity: ( self * 16.387064e-6 ) units: #cubicMeter.	^measure.! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/23/2013 19:53'!cubicMeter	| measure |	measure := HumMeasure quantity: (self) units: #cubicMeter.	^measure.! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/23/2013 20:12'!dyne	"force"	| measure |	measure := HumMeasure quantity: ( self * 1e-5 ) units: #newton.	^measure.! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/23/2013 20:04'!erg	| measure |	measure := HumMeasure quantity: ( self * 1e-7 ) units: #joule.	^measure.! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/25/2013 08:46'!feet	| measure |	measure := self foot.	^ measure.! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/23/2013 19:44'!foot	| measure |	measure := HumMeasure quantity: (self * 0.304799735) units: #meter.	^ measure.! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/23/2013 20:17'!footH2O	"foot of water - pressure"	| measure |	measure := HumMeasure quantity: ( self * 2.98898e3 ) units: #pascal.	^measure.! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 5/4/2013 11:27'!gravity	| measure |	measure := HumMeasure quantity: (self * 9.80665) units: 'meter' per: 'square second'.	^measure! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/25/2013 09:02'!hectare	"area equivalent to 100 meter by 100 meter"	| measure |	measure := HumMeasure quantity: (self * 10e3) units: #squareMeter.	^measure.! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/23/2013 20:06'!horsePower	| measure |	measure := HumMeasure quantity: ( self * 735.49875 ) units: #watt.	^measure.! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/25/2013 08:47'!hp	"horse-power"	| measure |	measure := self horsePower.	^measure.! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 5/4/2013 21:16'!inch	| measure |	measure := HumMeasure quantity: (self * 0.0254) units: 'meter'.	^ measure.! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/25/2013 08:47'!inches	| measure |	measure := self inch.	^ measure.! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/25/2013 08:54'!joule	"Energy"	| measure |	measure := HumMeasure quantity: ( self ) units: #joule.	^measure.! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/25/2013 08:45'!kg	| m |	m := self kilogram.	^m! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/23/2013 19:40'!kilogram	| m |	m := HumMeasure new.	m quantity: (self) units: #kilogram.	^m! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/23/2013 19:40'!kilometer	| m |	m := HumMeasure new.	m quantity: (self) * 1000 units: #meter.	^m! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 5/4/2013 11:08'!kilometerPerSecond	"kilometers per second"	| measure |	measure := HumMeasure quantity: (self * 1000) units: 'meter' per: 'second'.	^measure! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/25/2013 08:45'!kilometers	| m |	m := self kilometer.	^m! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/25/2013 08:48'!knots	"Nautical miles (ISO)"	| measure |	measure := HumMeasure quantity: (self * 1852.0) units: #meter.	^measure! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/25/2013 08:44'!kps	"kilometers per second"	| measure |	measure := self kilometerPerSecond.	^measure! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/23/2013 20:30'!lbf	"pound force"	"See also: pound mass ==> Number>>pound"	| measure |	measure := HumMeasure quantity: ( self * 4.448222 ) units: #newton.	^measure.! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/24/2013 10:44'!lightSecond	| measure |	measure := HumMeasure quantity: (self * 2.99792458e8) units: #meter.	^measure! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/24/2013 10:44'!lightSpeed	| measure |	measure := HumMeasure quantity: (self * 2.99792458e8) units: #meterPerSecond.	^measure! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/23/2013 19:45'!lightYear	| measure |	measure := HumMeasure quantity: (self * 9.4607304725808e15) units: #meter.	^measure! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/23/2013 19:54'!litre	| measure |	measure := HumMeasure quantity: (self * 0.001) units: #cubicMeter.	^measure.! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/23/2013 19:41'!meter	| measure |	measure := HumMeasure quantity: (self) units: #meter.	^measure.! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 5/4/2013 11:08'!meterPerSecond	"meter per second"	| measure |	measure := HumMeasure quantity: (self) units: 'meter' per: 'second'.	^measure! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/25/2013 08:43'!meters	| measure |	measure := self meter.	^measure! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 5/4/2013 11:35'!mile	| measure |	measure := HumMeasure quantity: (self * 1609.34) units: #meter.	^measure! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/25/2013 08:42'!miles	| measure |	measure := self mile.	^measure! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 5/4/2013 11:39'!milesPerHour	"miles per hour - converted to meters per second"	| measure factor |	factor := (1 mile quantity)/3600.0.	measure := HumMeasure quantity: ( self * factor ) units: 'meter' per: 'second'.	^measure! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/23/2013 20:19'!mmHg	"millimeters of mercury - pressure"	| measure |	measure := HumMeasure quantity: ( self * 133.3224 ) units: #pascal.	^measure.! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/25/2013 08:43'!mph	"miles per hour - converted to meters per second"	| measure factor |	measure := self milesPerHour.	^measure! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/25/2013 08:44'!mps	"meters per second"	| measure |	measure := self meterPerSecond.	^measure! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/25/2013 08:56'!newton	"force - Newton"	| measure |	measure := HumMeasure quantity: ( self ) units: #newton.	^measure.! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/25/2013 08:56'!pascal	"pressure - Pascal"	| measure |	measure := HumMeasure quantity: ( self ) units: #pascal.	^measure.! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 5/4/2013 20:40'!percent	"percent"	| measure |	measure := HumMeasure quantity: (self) units: '%'.	^measure.! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 5/4/2013 20:28'!pixel	"pixels"	| measure |	"Need to abbreviate because that is how SVG and HTML expects to see it."	measure := HumMeasure quantity: (self) units: 'px'.	^measure.! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 5/4/2013 10:46'!pound	" pound mass 	Note: lbf is pound force"	| m |	m := HumMeasure new.	m quantity: (self * 0.45359237) units: #kilogram.	^m! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/25/2013 08:57'!poundMass	" pound mass - lbm"	| m |	m := HumMeasure new.	m quantity: (self * 0.45359237) units: #kilogram.	^m! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/25/2013 08:59'!poundPerSquareInch	"pound per square inch - pressure"	| measure |	measure := HumMeasure quantity: ( self * 6.894757e3 ) units: #pascal.	^measure.! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/25/2013 08:58'!psi	"pound per square inch - pressure"	| measure |	measure := self poundPerSquareInch.	^measure.! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/27/2013 15:32'!px	"pixels"	| measure |	measure := self pixel.	^measure.! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/23/2013 19:53'!squareMeter	| measure |	measure := HumMeasure quantity: (self) units: #squareMeter.	^measure.! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 5/4/2013 12:03'!tonne	"metric ton"	| m |	m := HumMeasure new.	m quantity: (self * 1000) units: #kilogram.	^m! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/23/2013 20:00'!watt	| measure |	measure := HumMeasure quantity: ( self ) units: #watt.	^measure.! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/25/2013 08:46'!yard	| measure |	measure := HumMeasure quantity: (self * 0.9144) units: #meter.	^measure! !!Number methodsFor: 'HumMeasure' stamp: 'RichardAlexanderGreen 4/25/2013 08:46'!yards	| measure |	measure := self yard.	^measure! !