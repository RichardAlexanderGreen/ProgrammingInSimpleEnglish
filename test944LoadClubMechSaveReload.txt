===Comment: Analysis of lines-of-code.. . Hum reduces the number of lines-of-code because:. - Class attributes are generally identified in a single line.. - Persistence is automatic.. - Filters are relatively simple.. - Mark-up is much less verbose than HTML.. - User-interface details are hidden in the scribe.. 	- Scribe performs openID authentication.. 	- ===Comment: Base Ontology.. The base vocabulary includes: . 	  order, order item, bill-of-material, material, part, assembly, . 	  container, person, worker, employee, organization, roles, . 	  measure, metric, money, cost, price, account, . 	  resource, resource-pool, inventory, . 	  and more.===Comment: Experiment - Club Mech.. Question: Is Hum notation suitable for a typical web application?. Question: Does Hum reduces the lines-of-code for Club Mech views / dialogs?. Use Cases:. Voter identifies self.. Voter enters a proposal.. Voter votes for proposal and can vote for more than one.. Voter votes for proposal in reduced list, but can only vote for one.. The home screen shows club title, purpose, meetings, and members.===Dictionary: Basic Accounting.. Account attributes include account-type, name, metric.. Account-type categories include expense, revenue, asset, liability, resource.. . Account subtypes include expense-account, revenue-account, asset-account, liability-account.. Account subtypes include credit-account, debit-account.. Money subtypes include expense, revenue, asset, liability.. Journal-entry attributes include journal-name, measure, credit-account-name, debit-account-name.. Ledger-entry attributes include ledger-name, measure, ledger-account-name, ledger-account-name.. Journal attributes include journal-name.. Ledger attributes include ledger-name.===Dictionary: Club, members, and meetings.. Club attributes include title, purpose, meeting-pattern, meeting-location, meetings, members.. Location attributes include address, GPS, map-url.. Meeting attributes include topic, meeting-when.. A topic is a proposal.. Topic attributes include speaker.. A speaker is a person.. Speaker attributes include bio.. A member is a user.. ===Dictionary: Data types. (These are all primitive types in Hum. The description here is informational.). Data-type categories include measure, string, text, date, date-time, time-stamp, identifier, entity, attribute, category.. . . . Text is a string.. Text attributes include markup.. String attributes include character-list.. Character attributes include id , glyph.. Two-digit-string subtypes include mm, dd, hour, minute, second.. Date attributes include mm, dd, year, day-of-week, month.. Month subtypes include January, February, March, April, May, June, July, August, September, October, November, December.. Month attributes include name, mm, abbreviation, quarter.. Day-of-week subtypes include Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday.. Day-of-week attributes include name, abbreviation, day-types.. Day-type categories include weekday, weekend, holiday.. Date-time attributes include date, time-of-day.. Time-of-day attributes include hour, minute, second.. Time-stamp attributes include date-time, event.. Event attributes include event-id.. Identifier is a string.. Entity attributes include name, attributes.. Attribute attributes include name, data-type.. Category attributes include name, category-values.. Category-value is a string.===Dictionary: Measures and Metrics.. Measure attributes include quantity, metric, precision.. Metric categories include meter, liter, milliliter, pound, gram, kilogram, millimeter, centimeter, ounce, fluid-ounce, cubic-centimeter.. cc is abbreviation for cubic-centimeter.. ml is abbreviation for milliliter.. oz is abbreviation for ounce.. lb is abbreviation for pound.. kg is abbreviation for kilogram.. cm is abbreviation for centimeter.. . Quantity is a number.. Precision is a number.. Observation attributes include name, date-time, location, observed-item, measures.. Money is a measure.. Money attributes include currency.. Money subtypes include cost, price.. Currency categories include US-dollar, Canadian-dollar, British-pound, Euro.===Dictionary: Method, Procedure.. Method attributes include principle-deliverable, description, inputs, step-list, advice.. Input attributes include input-type, name, measure.. Input-type categories include consumable, rentable.. Consumable categories include material-consumable, energy, part-consumable.. Rentable categories include skill, equipment, work-space.. . Method subtypes include recipe, procedure.. Deliverable is a product.. Step attributes include step-number, description, step-procedure , sub-product.===Dictionary: Order vocabulary.. Order attributes include order-date, buyer, buyer-account, provider, delivery-address, order-items, grand-total.. Grand-total is a money.. Order-item attributes include product, quantity-measure, unit-price, subtotal.===Dictionary: Party vocabulary.. Party attributes include name, postal-address, contact-channels, representative.. Person is a party.. Person attributes include first-name, last-name, family-name.. Worker is a person.. Employee is a worker.. Organization is a party.. Representative is a person.===Dictionary: People we know. (Should be in base vocabulary.). Party attributes include name, mailing-address, business-phone.. A person is a party.. Person attributes include prefix, first-name, middle-initials, last-name, suffix.. A user is a person.. User attributes include e-mail-address, portrait.. ===Dictionary: Product, Service, Part.. Product attributes include name, metric.. Product subtypes include part, material, service.. Part attributes include name, description, standard-cost, standard-price.. Assembly is a part.. Assembly attributes include bill-of-material-table, method.. Material attributes include name, description, unit-of-measure.. Product-package attributes include product, package-unit-of-measure.. Bill-of-material-table attributes include bill-of-material-lines.. Bill-of-material-line attributes include part, quantity.===Dictionary: Proposals and Ballots.. Document attributes include authors, title, abstract-text, full-text, authored-when.. Document-version is a document.. Document-version attributes include version-authors, versioned-when.. An author is a person.. A proposal is a document.. Proposal attributes include sponsored-by-member, sponsored-when, shares-required, ready-for-ballot, assigned-to-party.. . Ready-for-ballot categories include 'yes: Include on ballots', 'incomplete: authors are working on it', 'passed: implementation assigned', 'withdrawn: withdrawn for now'.. A member is a person.. Ballot attributes include finalized-when, proposals, shares-allowed.. Shares-allowed is a measure.. . Voter-ballot attributes include voter, proposal-scores, submitted-when, finalized-when.. . Proposal-score attributes include title, score, when-scored.. Score is a measure.. Scoreboard attributes include scored-when, proposal-scores.===Dictionary: Resources.. Resource-pool attributes include name, resource-type, location, resources.. Resource-type categories include skill, material, product.. Inventory is a resource-pool.. Inventory attributes include resource-pools.===Dictionary: Role vocabulary.. Role attributes include name, process.. Assignment attributes include role, party.===Dictionary: Topic vocabulary.. Topic attributes include speaker, title, description.===Dictionary: View vocabulary.. View attributes include view-name, associated-entity.===Context: BookkeepingOperations.U:  Credit [credit-account] debit [debit-account] with [measure] in [journal-name].S:  Ok.. Bookkeeper: Credit credit-account debit debit-account with measure in journal-name.===Context: Greetings.. . U:  No cookie. (Scribe says: 'No cookie.')U:  Sign on as a different user.S:  Welcome.. Show welcome.U:  I am [user]. (Scribe has authenticated user.)S:  Hello [user first-name]. What do you want to do?. Ask activity.===Context: LedgerSetup.U:  Create new account.S:  Ok.. New account.. Ask Account-Spec.===Context: SelectActivity.U:  Enter * topic.U:  Propose * topic.U:  Enter * talk.U:  Propose * talk.S:  Please enter a description of the talk you are offering.. . New topic.. Ask topic.U:  * scoreboard.S:  Here is the scoreboard for the current ballot.. Show scoreboard.. . U:  Vote *.S:  Here is the current ballot.. Ask voter-ballot.. ===Context: Start.U:  Enter.S:  Club Mech is a test bed for Hum dialogs.U:  *.S:  Welcome to Club Mech.S:    Are you a member? U:  I am a member.S:  What is your name?U:  My name is [user name].U:  Authenticated as [user name].S:  Hello [user name].S:    Please select an activity.. Push context "Select an activity.".===Role: Bookkeeper===Role: Bookkeeper -- Add measure to account.. Action: Add measure to account.. ===Role: Bookkeeper -- Create account-type named name with initial value measure.. Action: Create account-type named name with initial value measure..  ((How will the blackboard and/or world-base know this is a new instance of account?)) .  ((Normally new instances are created via DialogAgent invoked by {New entity-type}.)) .  ((The assumption is that the user-interface platform will provide the needed create/update logic.)) . ===Role: Bookkeeper -- Credit credit-account debit debit-account with measure in journal-name.. Action: Credit credit-account debit debit-account with measure in journal-name..  ((How does this transaction get associated with a business event?)) .  ((TODO: Rewrite Bookkeeper so that transactions are associated with business events.)) . Credit credit-account debit debit-account with measure.. ===Role: Bookkeeper -- Credit credit-account debit debit-account with measure.. Action: Credit credit-account debit debit-account with measure.. Add measure to credit-account.. Subtract measure from debit-account.. ===Role: Bookkeeper -- Subtract measure from account.. Action: Subtract measure from account.. ===Role: DialogAgent===Role: DialogAgent -- Ask view.. Action: Ask view..  ((A view is identified by its name.)) . ===Role: DialogAgent -- New entity.. Action: New entity..  ((Create a new instance of given entity-type.)) ===Role: DialogAgent -- Show view.. Action: Show view..  ((Show the view in read-only mode.)) . ===Pane: meetings.. (This view pane includes past meetings and future meetings.). !!! Meetings. For each meeting in descending order of meeting-when:.  [yyyy-mm-dd: meeting-when] [topic title] [topic presenter].  [topic description 3]. . (The meeting-when attribute is a time-stamp. But we only want to show the date part here.)===Pane: members.. !!! Members. Table of members:. | portrait | name | [pop-up: bio] |===View: Account-Spec.. !!! Create a new account..   Account Type: [account-type]. Account Metric: [metric]===View: Current-Ballot Proposals.. .   Ballot as of: [ballot finalized-when].   . For each proposal in ballot-proposals = proposals where proposal is ready-for-ballot:.   [title].   authored by: [author] sponsored by: [sponsored-by-member] .            on: [authored-when]   on: [sponsored-when].   [shares-required] shares are required for passage..   abstract: [abstract-text 3].   description: [full-text 3]. . (Note: We do not define eligible voters here.)===View: Current-Ballot Scoreboard.. (The context for a scoreboard is the current ballot.). .  Each voter is allowed [votes-allowed] shares..  Scores as-of: [scored-when]..  Voting will be closed by: [voting-closed-when]..  All ballots were finalized at: [finalized-when].. (This time-stamp is either the time when all the submitted voter-ballots are finalized,  or, it is the voting-closed-when.). . Table of proposal-scores where proposal is in current-ballot ballot-proposals.. | score | title |. (The score could be total shares voted, percentage of shares voted, some other scheme.)===View: Proposal score history.. .  This view shows the history of the shares allocated to this proposal on various ballots.. (The idea is that a proposal may appear on ballots until it is passed or withdrawn.). .  Proposal: [proposal title].  History as of: [ran-when]..  Minimum required: [proposal shares-required]. . .Table of proposal-scores where proposal-score title matches proposal title:. | score | scored-when | percent-of-requirement = 100 * score / shares-required |. . (Note: The proposal title is treated as a natural key.). (If the title of a proposal is changed, it is treated as a different proposal.)===View: Topic.. .  Speaker: [speaker`s name].  Topic: [title].  Description:.     [description 5]===View: Voter-Ballot..  Voter: [voter name] id: [vote id].  You are allowed [vote-share quantity] [vote-share units]..  You may change your votes until the voting is closed. . . Table of proposal-scores where current-ballot proposals include proposal:. | shares | title |. (The score shown on this ballot view only includes the voter`s contribution to the total.). (The total score is shown on the scoreboard view.). .  Do you wish to finalize your ballot? [finalize?] [finalized-when]. (You cannot change your ballot after you finalize it and submit it.). (If all ballots are finalized, the scoreboard for the ballot shows "finalized".). .  [[Submit]]. (The scoreboard is not updated until the ballot is submitted.)===View: Welcome.. (Home screen). . ! Welcome to [club title].. .  [club title] meets on: [meeting-pattern] of each month.  at: [meeting-location] [link: directions | meeting-location map-url ]. . !! Purpose .  [club purpose-text 7]. .  [pane: meetings] [pane: members]===